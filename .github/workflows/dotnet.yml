# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    tags: [ "v*.*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services: 
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: medi_cloud_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Apply database migrations
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef database update -p ./MediCloud.Infrastructure/MediCloud.Infrastructure.csproj -s MediCloud.Api/MediCloud.Api.csproj
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
  
  build:
    needs: test
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/tags/') && 
      endsWith(github.ref_name, '-release')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Tencent Container Registry
        uses: docker/login-action@v3
        with: 
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}
        
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with: 
          images: ccr.ccs.tencentyun.com/makerverse/${{ github.event.repository.name }}
          tags: |
            type=ref,event=tag
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with: 
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
